[project]
name = "survey-studio"
version = "0.0.1"
description = "A multi-agent literature review assistant using AutoGen and Streamlit"
authors = [
    {name = "Aditya Gambhir", email = "gambhir.aditya19@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["literature-review", "autogen", "streamlit", "arxiv", "research"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: General",
]
requires-python = ">=3.11.9"
dependencies = [
    "streamlit>=1.38.0",
    "arxiv>=2.1.0",
    "autogen-core>=0.4.1",
    "autogen-agentchat>=0.4.1",
    "autogen-ext>=0.4.1",
    "openai>=1.53.0",
    "tenacity>=8.5.0",
    "tiktoken>=0.11.0",
]

[project.optional-dependencies]
dev = [
    "ruff==0.6.9",
    "mypy==1.11.1",
    "pytest==8.3.2",
    "pytest-asyncio==0.23.8",
    "pytest-cov==5.0.0",
    "coverage==7.6.1",
    "pre-commit==3.8.0",
    "detect-secrets==1.5.0",
]

[project.scripts]
survey-studio = "survey_studio.app:main"

[project.urls]
Homepage = "https://github.com/survey-studio/survey-studio"
Repository = "https://github.com/survey-studio/survey-studio"
Documentation = "https://github.com/survey-studio/survey-studio/wiki"
"Bug Reports" = "https://github.com/survey-studio/survey-studio/issues"

[tool.poetry]
packages = [{include = "survey_studio", from = "src"}]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "SLF", # flake8-self
    "TID", # flake8-tidy-imports
    "ERA", # eradicate (commented-out code)
    "PL",  # pylint
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["N806"]
"**/migrations/*.py" = ["E501", "D100", "D101", "D102", "D103", "D104"]

[tool.ruff.lint.isort]
known-first-party = ["survey_studio"]
combine-as-imports = true
force-sort-within-sections = true

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.format]
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.1"
tag_format = "v$version"
update_changelog_on_bump = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_column_numbers = true
show_error_codes = true
strict = true
files = ["src/survey_studio", "tests"]
follow_imports = "silent"
exclude = [
    "^\\.mypy_cache/",
    "^\\.venv/",
    "^venv/",
    "^build/",
    "^dist/",
    "^node_modules/",
    "^__pypackages__/",
    "^__pycache__/",
]
mypy_path = ["src"]

[[tool.mypy.overrides]]
module = [
    "arxiv.*",
    "autogen_core.*",
    "autogen_agentchat.*",
    "autogen_ext.*",
    "streamlit.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/survey_studio",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    # "--cov-fail-under=95"  # Temporarily disabled until tests are added
]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
# fail_under = 95  # Temporarily disabled until tests are added
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
