repos:
  # Security: detect secrets early to prevent committing sensitive data
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: detect-secrets (scan)
        args:
          - --baseline
          - .secrets.baseline
        exclude: |
          (?x)^(
            .*/tests/.*|
            .*/fixtures/.*|
            .*\.svg$
          )

  # General repository hygiene and basic checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: ["--maxkb=512"]
      - id: debug-statements
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-json
      - id: check-yaml
      - id: check-toml
      - id: name-tests-test
        args: ["--pytest-test-first"]

  # Code formatting and linting with ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff-format
        name: ruff format
        types_or: [python, pyi]
        args: [--config=pyproject.toml]
      - id: ruff
        name: ruff check
        types_or: [python, pyi]
        args: [--fix, --config=pyproject.toml]


  # Commit message validation with Conventional Commits
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.21.3
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Poetry sanity checks (ensure lock/pyproject consistency)
  - repo: https://github.com/python-poetry/poetry
    rev: 2.1.3
    hooks:
      - id: poetry-check
        files: pyproject.toml
      - id: poetry-lock
        files: pyproject.toml

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [poetry-lock]
  submodules: false
